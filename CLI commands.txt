PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> npm start

> docker-nodejs@1.0.0 start
> node src/index.js

node:internal/modules/cjs/loader:1148
  throw err;
  ^

Error: Cannot find module 'express'
Require stack:
- C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker\src\index.js
    at Module._resolveFilename (node:internal/modules/cjs/loader:1145:15)
    at Module._load (node:internal/modules/cjs/loader:986:27)
    at Module.require (node:internal/modules/cjs/loader:1233:19)
    at require (node:internal/modules/helpers:179:18)
    at Object.<anonymous> (C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker\src\index.js:1:17)
    at Module._compile (node:internal/modules/cjs/loader:1358:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1416:10)
    at Module.load (node:internal/modules/cjs/loader:1208:32)
    at Module._load (node:internal/modules/cjs/loader:1024:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:174:12) {   
  code: 'MODULE_NOT_FOUND',
  requireStack: [
    'C:\\Users\\HP\\OneDrive\\Desktop\\Stuff\\docker\\learn_docker\\src\\index.js'
  ]
}

Node.js v20.14.0
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> npm install
npm warn deprecated @npmcli/move-file@1.1.2: This functionality has been moved to @npmcli/fs   

added 490 packages, and audited 491 packages in 22s

45 packages are looking for funding
  run `npm fund` for details

11 vulnerabilities (1 low, 4 moderate, 5 high, 1 critical)       

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> npm start

> docker-nodejs@1.0.0 start
> node src/index.js

Using sqlite database at /tmp/todo.db
Listening on port 3000
Terminate batch job (Y/N)? y
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker


Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image       
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx
  compose*    Docker Compose
  container   Manage containers
  context     Manage contexts
  debug*      Get a shell into any image or container
  desktop*    Docker Desktop commands (Alpha)
  dev*        Docker Dev Environments
  extension*  Manages Docker extensions
  feedback*   Provide feedback, right in your terminal!
  image       Manage images
  init*       Creates Docker-related starter files for your project
  manifest    Manage Docker image manifests and manifest lists   
  network     Manage networks
  plugin      Manage plugins
  sbom*       View the packaged-based Software Bill Of Materials (SBOM) for an image
  scout*      Docker Scout
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes      
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive   
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects     
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers  
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container       
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers     
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default
                           "C:\\Users\\HP\\.docker")
  -c, --context string     Name of the context to use to connect to the
                           daemon (overrides DOCKER_HOST env var and
                           default context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info",
                           "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify       
      --tlscacert string   Trust certs signed only by this CA (default
                           "C:\\Users\\HP\\.docker\\ca.pem")     
      --tlscert string     Path to TLS certificate file (default 
                           "C:\\Users\\HP\\.docker\\cert.pem")   
      --tlskey string      Path to TLS key file (default
                           "C:\\Users\\HP\\.docker\\key.pem")    
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit    

Run 'docker COMMAND --help' for more information on a command.   

For more help on how to use Docker, head to https://docs.docker.com/go/guides/
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker build -t mytodoapp
ERROR: "docker buildx build" requires exactly 1 argument.
See 'docker buildx build --help'.

Usage:  docker buildx build [OPTIONS] PATH | URL | -

Start a build
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker build -t mytodoapp .
[+] Building 57.0s (3/3) FINISHED           docker:desktop-linux
 => [internal] load build definition from Dockerfile        0.1s
 => => transferring dockerfile: 219B                        0.0s 
 => ERROR [internal] load metadata for docker.io/library/  56.7s
 => [auth] library/node:pull token for registry-1.docker.i  0.0s
------
 > [internal] load metadata for docker.io/library/node:21-alpine:
   2 |
   3 |     WORKDIR C:/Users/HP/OneDrive/Desktop/Stuff/docker/learn_docker
--------------------
ERROR: failed to solve: node:21-alpine: failed to resolve source metadata for docker.io/library/node:21-alpine: failed to copy: httpReadSeeker: failed open: failed to do request: Get "https://production.cloudflare.docker.com/registry-v2/docker/registry/v2/blobs/sha256/ca/cad63adc9266f2381a0730aabdb7f8dc65ef32c446cdeb238dae9a54a1ea490f/data?verify=1730483708-BfpcghK%2BeKb84BX5IXmq2OkTIQA%3D": dialing production.cloudflare.docker.com:443 container via direct connection because static system has no HTTPS proxy: connecting to production.cloudflare.docker.com:443: dial tcp: lookup production.cloudflare.docker.com: no such host
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker build -t mytodoapp .
[+] Building 34.2s (11/11) FINISHED                                       docker:desktop-linux
 => [internal] load build definition from Dockerfile                                      0.0s
 => => transferring dockerfile: 540B                                                      0.0s
 => [internal] load metadata for docker.io/library/node:20-alpine                         6.4s
 => [auth] library/node:pull token for registry-1.docker.io                               0.0s
 => [internal] load .dockerignore                                                         0.0s
 => => transferring context: 2B                                                           0.0s 
 => [1/5] FROM docker.io/library/node:20-alpine@sha256:c13b26e7e602ef2f1074aef304ce6e9b7  9.6s 
 => => resolve docker.io/library/node:20-alpine@sha256:c13b26e7e602ef2f1074aef304ce6e9b7  0.0s 
 => => sha256:4daa6557aeb9c85fe8f6aeb7dd95c97952e65ea9db33cb52dd1cf08998affb 446B / 446B  0.4s 
 => => sha256:9b2c43f8e8e69cb2206f88a053836df6abe7853b997f401ebcab1ebde9 1.39MB / 1.39MB  0.9s 
 => => sha256:65e1b46b2b03b6ac10b59eaac1a4359fb1908c3ca79e024adf765dbf 42.62MB / 42.62MB  8.4s
 => => sha256:43c4264eed91be63b206e17d93e75256a6097070ce643c5e8f0379998b 3.62MB / 3.62MB  3.2s 
 => => extracting sha256:43c4264eed91be63b206e17d93e75256a6097070ce643c5e8f0379998b44f17  0.6s 
 => => extracting sha256:65e1b46b2b03b6ac10b59eaac1a4359fb1908c3ca79e024adf765dbf22f73b6  0.9s
 => => extracting sha256:9b2c43f8e8e69cb2206f88a053836df6abe7853b997f401ebcab1ebde996e70  0.0s 
 => => extracting sha256:4daa6557aeb9c85fe8f6aeb7dd95c97952e65ea9db33cb52dd1cf08998affbb  0.0s 
 => [internal] load build context                                                         4.6s 
 => => transferring context: 58.30MB                                                      4.5s 
 => [2/5] WORKDIR /app                                                                    0.2s 
 => [3/5] COPY package*.json ./                                                           0.1s 
 => [4/5] RUN npm install                                                                10.6s 
 => [5/5] COPY . .                                                                        1.1s 
 => exporting to image                                                                    5.7s 
 => => exporting layers                                                                   3.2s 
 => => exporting manifest sha256:d8cbf45fd10d7ba0559e4c15e97ff90a805858bea95bf0dbb01f010  0.0s 
 => => exporting config sha256:7609417470911fa20317609b10a0faf66b86c355e6284bd4d714c1faa  0.0s 
 => => exporting attestation manifest sha256:676255ff50943694d1b863bbba9db64f781aec446a1  0.0s 
 => => exporting manifest list sha256:1047718f570245d9f077365ea48026f355ee9776b280363cec  0.0s 
 => => naming to docker.io/library/mytodoapp:latest                                       0.0s 
 => => unpacking to docker.io/library/mytodoapp:latest                                    2.4s 

What's next:
    View a summary of image vulnerabilities and recommendations → docker scout quickview       
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker images
REPOSITORY   TAG       IMAGE ID       CREATED          SIZE
mytodoapp    latest    1047718f5702   45 seconds ago   418MB
cbatg13      latest    3018f44c2629   3 weeks ago      1.47GB
nginx        latest    d2eb56950b84   4 weeks ago      279MB
mongo        latest    0c17421487ae   6 weeks ago      1.14GB
redis        latest    6725a7dc7a44   3 months ago     174MB
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker run -it -d -p 3000:3000 mytodoapp
4d93d3b70e27de07ae363f0b18a95726c099e4bdb979a8d2537f86a4f9bf3b7e
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker ps
CONTAINER ID   IMAGE       COMMAND                  CREATED          STATUS          PORTS                    NAMES
4d93d3b70e27   mytodoapp   "docker-entrypoint.s…"   25 seconds ago   Up 23 seconds   0.0.0.0:3000->3000/tcp   affectionate_fermi
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker login
Authenticating with existing credentials...
Login Succeeded
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker images
REPOSITORY   TAG       IMAGE ID       CREATED          SIZE
mytodoapp    latest    1047718f5702   11 minutes ago   418MB
cbatg13      latest    3018f44c2629   3 weeks ago      1.47GB
nginx        latest    d2eb56950b84   4 weeks ago      279MB
mongo        latest    0c17421487ae   6 weeks ago      1.14GB
redis        latest    6725a7dc7a44   3 months ago     174MB
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker tag mytodoapp vasudha/mytodoapp
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker push vasudha/mytodoapp
Using default tag: latest
The push refers to repository [docker.io/vasudha/mytodoapp]
5f57931a061f: Waiting
8efdaa2e16f2: Waiting
65e1b46b2b03: Waiting
4daa6557aeb9: Waiting
5597bf187727: Waiting
437b16994591: Waiting
9b2c43f8e8e6: Waiting
55e58e35f5c3: Waiting
43c4264eed91: Waiting
push access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker tag vasudha/mytodoapp basicbegin/todoapp
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker push vasudha/mytodoapp       
Using default tag: latest
The push refers to repository [docker.io/vasudha/mytodoapp]
65e1b46b2b03: Waiting
437b16994591: Waiting
9b2c43f8e8e6: Waiting
4daa6557aeb9: Waiting
8efdaa2e16f2: Waiting
5597bf187727: Waiting
43c4264eed91: Waiting
5f57931a061f: Waiting
55e58e35f5c3: Waiting
failed to authorize: failed to fetch oauth token: Post "https://auth.docker.io/token": context canceled
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker tag basicbegin/mytodoapp vasudha301/basicbegin/todoapp
Error response from daemon: No such image: basicbegin/mytodoapp:latest
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker tag basicbegin/mytodoapp vasudha301/todoapp           
Error response from daemon: No such image: basicbegin/mytodoapp:latest
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker tag basicbegin/todoapp vasudh
a301/todoapp  
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker> docker push vasudha301/todoapp      
Using default tag: latest
The push refers to repository [docker.io/vasudha301/todoapp]
437b16994591: Pushed
5f57931a061f: Pushed
8efdaa2e16f2: Pushed
65e1b46b2b03: Pushed
5597bf187727: Pushed
55e58e35f5c3: Pushed
9b2c43f8e8e6: Pushed
4daa6557aeb9: Pushed
43c4264eed91: Pushed
latest: digest: sha256:1047718f570245d9f077365ea48026f355ee9776b280363cecd8cd0eb0581e0f size: 856
PS C:\Users\HP\OneDrive\Desktop\Stuff\docker\learn_docker>     